Compte-rendu TP7

------------------------------------------------------------------
NOM  : BRUNO
Prenom : Lauranne
Numero carte d'etudiant : 3602844

NOM :
Prenom :
Numero carte d'etudiant :
------------------------------------------------------------------


Protection de section critique
=============================

Nouvelle version du script ecriture.sh
#! /bin/bash
# ecriture.sh

if [ $# -lt 1 ]
then
    echo Il faut au moins un parametre
    exit 1
fi

for elem in "$@"
do
    lockfile -1 "$elem.lock"
    if [ ! -e "$elem" ]
    then
        echo premier $$ > "$elem"
    else
        echo suivant $$ >> "$elem"
    fi
    rm -f "$elem.lock"
done

Acces concurrents a plusieurs fichiers
======================================

Question 1
----------
Execution et explication
Cas 1 : 2 utilisateurs avec meme identifiant
    ./creation_utilisateur.sh user str str & ./creation_utilisateur.sh user str str &
    commutation avant les trois dernieres lignes avec echo
    mis en evidence avec un sleep avant les echo
Cas 2 : informations d'un user pas dans la meme ligne pour tous les fichiers
    commutation entre un des echo d'un utilisateurs et reprise d'un autre processus creation_utilisateur sur le echo dans le fichier en question
    mis en evidence avec des sleep de duree differentes entre les echo sleep $(($$%2)) par exemple

Question 2
----------
Ressources critiques, sections critiques et justification
Ressources critiques : fichier login.txt, pass.txt, nom.txt
	   Fichiers pour lesquels acces possible par plusieurs processus
Section critique : écriture dans les fichiers + lecture dans le fichier login.txt
	   Ordre d'écriture critère important + Login unique critère important

Question 3
----------
Nouvelle version du script creation_utilisateur.sh
#! /bin/bash
# script creation_utilisateur.sh
# Creation d'un nouvel utilisateur avec mise a jour des trois fichiers
# concernes.
# Si la creation du nouvel utilisateur n'est pas possible un message
# d'erreur est affiche.
# Necessite trois parametres qui correspondent respectivement au login,
# au mot de passe et au nom du nouvel utilisateur.

if [ "$#" -ne 3 ]; then
  echo Vous devez saisir trois parametres
  exit 1
fi
if [ -z "$1" ] || [ -z "$2" ] || [ -z "$3" ]; then
  echo Vous devez saisir un login, un mot de passe et un nom non vide
  exit 1
fi

lockfile -1 "user_creation.lock"

if [ -f login.txt ] && [ ! -z "`grep "^$1$" login.txt`" ]
then
  echo Choisissez un login different de $1
  rm -f "user_creation.lock"
  exit 1
fi

echo "$1" >> login.txt
echo "$2" >> pass.txt
echo "$3" >> nom.txt
rm -f "user_creation.lock"


Question 4
----------
Nouvelle version du script creation_utilisateur.sh
#! /bin/bash
# script creation_utilisateur.sh
# Creation d'un nouvel utilisateur avec mise a jour des trois fichiers
# concernes.
# Si la creation du nouvel utilisateur n'est pas possible un message
# d'erreur est affiche.
# Necessite trois parametres qui correspondent respectivement au login,
# au mot de passe et au nom du nouvel utilisateur.

if [ "$#" -ne 3 ]; then
  echo Vous devez saisir trois parametres
  exit 1
fi

if [ -z "$1" ] || [ -z "$2" ] || [ -z "$3" ]; then
  echo Vous devez saisir un login, un mot de passe et un nom non vide
  exit 1
fi

lockfile -1 "login.lock"
if [ -f login.txt ] && [ ! -z "`grep "^$1$" login.txt`" ]
then
  echo Choisissez un login different de $1
  rm -f "login.lock"
  exit 1
fi

echo "$1" >> login.txt
lockfile -1 "pass.lock"
rm -f "login.lock"
echo "$2" >> pass.txt
lockfile -1 "nom.lock"
rm -f "pass.lock"
echo "$3" >> nom.txt
rm -f "nom.lock"



Probleme de la piscine
======================

Question 1
----------
Script prendre_ressource.sh :
#! /bin/bash
# prendre_ressource.sh

if [ $# -lt 1 ]
then
    echo Il faut au moins un parametre
    exit 1
fi
ressource=$1

lockfile -1 "$ressource.lock"
read val < $ressource
while [[ val -lt 1 ]] ; do
    rm -f "$ressource.lock"
    sleep 1
    lockfile -1 "$ressource.lock"
    read val < $ressource
done
echo $((val-1)) > $ressource
rm -f "$ressource.lock"
		

Script rendre_ressource.sh :
#! /bin/bash
# rendre_ressource.sh

if [ $# -lt 1 ]
then
    echo Il faut au moins un parametre
    exit 1
fi
ressource=$1

lockfile -1 "$ressource.lock"
read val < $ressource
echo $((val+1)) > $ressource
rm -f "$ressource.lock"



Instructions de prise d'une cabine :
./prendre_ressource.sh /tmp/3602844/nb_cabines

Instructions de liberation d'une cabine :
./rendre_ressource.sh /tmp/3602844/nb_cabines

Script usager :
#! /bin/bash
#usager.sh

echo "Arrivee de l'usager $$"
source ./prendre_ressource.sh /tmp/$USER/nb_cabines
source ./prendre_ressource.sh /tmp/$USER/nb_paniers
source ./rendre_ressource.sh /tmp/$USER/nb_cabines
echo "Usager $$ se baigne"
sleep 2
source ./prendre_ressource.sh /tmp/$USER/nb_cabines
source ./rendre_ressource.sh /tmp/$USER/nb_paniers
source ./rendre_ressource.sh /tmp/$USER/nb_cabines
echo "Fin de $$"

Script lancement :
#! /bin/bash
#lancement.sh

mkdir -p /tmp/$USER

echo 5 > /tmp/$USER/nb_paniers
echo 3 > /tmp/$USER/nb_cabines
for i in {1..7} ; do
    ./usager.sh &
done
wait
    
